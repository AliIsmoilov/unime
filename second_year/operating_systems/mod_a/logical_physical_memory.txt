                                    Logical VS Physicall address

What is a Logical Address? 
    - Logical address is also known as a virtual address.
    - These addresses are generated by CPU during program execution.
    - Logical Address used by programs to access data and instructions stored in actual memory.


Real-world Example of Logical Address
    Let's take a simple example to understand this concept better. 
    Imagine you are running word application. When you open a document, 
    the CPU generates Logical Address to fetch the content of that document from memory.
    These logical addresses are unique for each running process and 
    do not represent the physical location of the data in RAM (Random Access Memory). 


What is a Physical Address in OS?
    A physical address is the actual location of the data in the computer's hardware memory
    such as RAM or storage device.
    Unlike logical addresses which is generated by CPU, physical address represent
    true location of the data in memory.


Why we need Logical Address?
    1. Isolation:
        - every program thinks it has it's own private memory space
        - This keeps programs from messing with each other's data (which could crash your system).
        - Example: If you are running a game and browser at the same time, each uses logical address.
          so they don't overwrite each other's memory
    
    2. Security:
        - Program's can't directly access physical memory, which protects sensitive data.
        - The OS can control access and ensure safe execution.

    3.  Multiprogramming Support
        - With logical addresses, multiple programs can run at once without interfering.
        - Each program gets its own logical space, even if they share the same physical memory.
